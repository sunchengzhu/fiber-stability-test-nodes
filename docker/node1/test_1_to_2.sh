#!/bin/bash

AUTH_TOKEN="EpECCqYBCgVwZWVycwoIcGF5bWVudHMKCGNoYW5uZWxzCghpbnZvaWNlcxgDIgkKBwgAEgMYgAgiCQoHCAESAxiACCIJCgcIARIDGIEIIgkKBwgAEgMYgQgiCQoHCAESAxiCCCIJCgcIABIDGIIIIggKBggAEgIYGCIJCgcIARIDGIMIMiYKJAoCCBsSBggFEgIIBRoWCgQKAggFCggKBiCAwODoBgoEGgIIAhIkCAASIC3KNA3sQcH7HueRbBDT-Kg9Lmu5LwcEy-OMKcCvtVqRGkCg8T6TWf9HIT5nOfBjB0gelDJMwpIjM9utyJQ9JI3m3L5Sll2AJIPNajGsBy0Ywmkx0Z5VFT3n1SlHuWMM_wMFIiIKIMnzUSJrPnRIaFZYVjxVJu64vI-Oi81uftHSZWcuCZUQ"
timeout=600

while true; do
    start_time=$(date +%s)

    while true; do
        payment_preimage="0x$(openssl rand -hex 32)"

        # 0.01 CKB
        response=$(curl -sS --location 'http://172.30.0.2:8232' \
            --header "Authorization: Bearer $AUTH_TOKEN" \
            --header 'Content-Type: application/json' \
            --data "$(
                cat <<EOF
{
    "id": 1,
    "jsonrpc": "2.0",
    "method": "new_invoice",
    "params": [{
        "amount": "0xf4240",
        "currency": "Fibt",
        "description": "test invoice generated by node 2",
        "expiry": "0xe10",
        "final_cltv": "0x28",
        "payment_preimage": "$payment_preimage",
        "hash_algorithm": "sha256"
    }]
}
EOF
            )")

        invoice_address=$(echo "$response" | jq -r '.result.invoice_address')

        payment_hash=$(curl -sS --location 'http://172.30.0.1:8231' \
            --header "Authorization: Bearer $AUTH_TOKEN" \
            --header 'Content-Type: application/json' \
            --data "$(
                cat <<EOF
{
    "id": 2,
    "jsonrpc": "2.0",
    "method": "send_payment",
    "params": [{
        "invoice": "$invoice_address"
    }]
}
EOF
            )" | jq -r '.result.payment_hash')

        echo "payment_hash: $payment_hash"
        sleep 1

        payment_response=$(curl -sS --location 'http://172.30.0.1:8231' \
            --header "Authorization: Bearer $AUTH_TOKEN" \
            --header 'Content-Type: application/json' \
            --data "$(
                cat <<EOF
{
    "id": 3,
    "jsonrpc": "2.0",
    "method": "get_payment",
    "params": [
        {
            "payment_hash": "$payment_hash"
        }
    ]
}
EOF
            )")

        status=$(echo "$payment_response" | jq -r '.result.status')
        echo "status: '$status'"

        if [ "$status" = "Success" ]; then
            elapsed=$(($(date +%s) - start_time))
            echo "Channels is ready after ${elapsed} seconds"
            break   # 跳出内层循环，重新开始下一轮
        fi

        elapsed=$(($(date +%s) - start_time))
        if [ "$elapsed" -ge "$timeout" ]; then
            echo "Timeout: waiting for channel availability exceeded 10 minutes" >&2
            exit 1  # 保持原状，超时退出整个脚本
        fi

        sleep 5
    done
done
